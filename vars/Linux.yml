---
rke2_tarball_url: "https://rancher-mirror.rancher.cn/rke2/releases/download"

rke2_server_network_rules_arg:
  - { protocol: "tcp", port: "9345" } # RKE2 supervisor API
  - { protocol: "tcp", port: "6443" } # Kubernetes API
  - { protocol: "tcp", port: "2379" } # etcd client port
  - { protocol: "tcp", port: "2380" } # etcd peer port
  - { protocol: "tcp", port: "2381" } # etcd metrics port

rke2_network_rules_arg:
  - { protocol: "udp", port: "8472" } # Required only for Flannel VXLAN
  - { protocol: "tcp", port: "10250" } # kubelet metrics
  - { protocol: "tcp", port: "30000-32767" } # NodePort port range
  - { protocol: "udp", port: "8472" } # Cilium CNI VXLAN
  - { protocol: "tcp", port: "4240" } # Cilium CNI health checks
  - { protocol: "tcp", port: "179" } # Calico CNI with BGP
  - { protocol: "udp", port: "4789" } # Calico CNI with VXLAN
  - { protocol: "tcp", port: "5473" } # Calico CNI with Typha
  - { protocol: "tcp", port: "9098" } # Calico Typha health checks
  - { protocol: "tcp", port: "9099" } # Calico health checks
  - { protocol: "udp", port: "8472" } # Canal CNI with VXLAN
  - { protocol: "tcp", port: "9099" } # Canal CNI health checks
  - { protocol: "udp", port: "51820" } # Canal CNI with WireGuard IPv4
  - { protocol: "udp", port: "51821" } # Canal CNI with WireGuard IPv6/dual-stack
  - { protocol: "udp", port: "4789" } # Flannel CNI with VXLAN

rke2_module_dependents:
  - "br_netfilter"
  - "ip_vs"
  - "ip_vs_rr"
  - "ip_vs_sh"
  - "ip_vs_wrr"
  - "nf_conntrack"
  - "nf_conntrack_ipv4"
  - "overlay"

rke2_kernel_parameters:
  - { variable: "kernel.perf_event_paranoid", value: "-1" }
  - { variable: "net.bridge.bridge-nf-call-arptables", value: "1" }
  - { variable: "net.bridge.bridge-nf-call-ip6tables", value: "1", create: "{{ ansible_all_ipv6_addresses | length > 0 }}" }
  - { variable: "net.bridge.bridge-nf-call-iptables", value: "1" }
  - { variable: "net.core.somaxconn", value: "65535" }
  - { variable: "net.ipv4.conf.all.arp_announce", value: "2" }
  - { variable: "net.ipv4.conf.all.arp_ignore", value: "1" }
  - { variable: "net.ipv4.ip_forward", value: "1" }
  - { variable: "net.ipv4.conf.all.forwarding", value: "1" }
  - { variable: "net.ipv4.ip_local_port_range", value: "1025 65535" }
  - { variable: "net.ipv4.neigh.default.gc_stale_time", value: "120" }
  - { variable: "net.ipv4.neigh.default.gc_thresh1", value: "4096" }
  - { variable: "net.ipv4.neigh.default.gc_thresh2", value: "6144" }
  - { variable: "net.ipv4.neigh.default.gc_thresh3", value: "8192" }
  - { variable: "net.ipv6.conf.all.forwarding", value: "1", create: "{{ ansible_all_ipv6_addresses | length > 0 }}" }
  - { variable: "vm.max_map_count", value: "262144" }
  - { variable: "vm.panic_on_oom", value: "0" }
  - { variable: "vm.overcommit_memory", value: "1" }
  - { variable: "kernel.panic", value: "10" }
  - { variable: "kernel.panic_on_oops", value: "1" }

rke2_servers: "\
  {% set _rke2_servers = [] %}\
  {% for host in groups[group_names[0]] %}\
  {% set _rke2_node_role = hostvars[host]['rke2_node_role'] | default('node', true) %}\
  {% if ( _rke2_node_role == 'server') %}\
  {% if _rke2_servers.append(hostvars[host]['ansible_host']) %}{% endif %}\
  {% endif %}\
  {% endfor %}\
  {{ _rke2_servers }}"
