---
- name: Create Kubernetes state directory.
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0711"
  loop: ["/var/lib/rancher/logs", "/var/lib/rancher/rke2", "/etc/rancher/rke2"]

- name: Create containerd logs symbolic link.
  file:
    src: "/var/lib/rancher/logs"
    dest: "/var/log/pods"
    state: "link"

- name: Create the etcd group.
  group:
    name: "etcd"
  when: rke2_node_role == "server"

- name: Create the etcd user.
  user:
    name: "etcd"
    group: "etcd"
    shell: "/sbin/nologin"
  when: rke2_node_role == "server"

- name: Install the RKE2 packages.
  unarchive:
    src: "{{ rke2_tarball_url }}/v{{ rke2_version }}-rke2r1/rke2.linux-amd64.tar.gz"
    dest: "/usr/local"
    owner: "root"
    group: "root"
    remote_src: "yes"
    validate_certs: "no"
  register: rke2_package_status
  until: rke2_package_status is succeeded
  retries: 3
  delay: 5

- name: Transfer API Server audit configuration file.
  copy:
    src: "audit-policy.yaml"
    dest: "/etc/rancher/rke2/audit-policy.yaml"
    owner: "root"
    group: "root"
    mode: "0600"
    backup: true
  when: rke2_node_role == "server"
  notify: Reloading the Server service.

- name: Transfer RKE2 configuration file.
  template:
    owner: "root"
    group: "root"
    mode: "0600"
    backup: true
    src: "config-{{ rke2_node_role }}.yaml"
    dest: "/etc/rancher/rke2/config.yaml"
  notify: Reloading the {{ rke2_node_role | title }} service.
