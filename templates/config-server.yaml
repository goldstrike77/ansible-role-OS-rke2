# Common
debug: {{ rke2_debug | default(false) | bool }}

# Listener
bind-address: {{ ansible_default_ipv4.address }}
tls-san:
{% for item in rke2_servers %}
  - "{{ item }}"
{% endfor %}
{% if rke2_server is defined %}
  - "{{ rke2_server }}"
{% endif %}

# Networking
cluster-cidr: {{ rke2_cni.pod_cidr | default("10.42.0.0/16") }}
service-cidr: {{ rke2_cni.srv_cidr | default("10.43.0.0/16") }}
cluster-domain: "{{ rke2_cluster_domain | default('cluster.local') }}"
egress-selector-mode: "{{ rke2_egress_selector_mode | default('agent') }}"
cni: "{{ rke2_cni.provider | default('calico') }}"

# Client
write-kubeconfig: "/etc/rancher/rke2/rke2.yaml"
write-kubeconfig-mode: "0600"

# Cluster
token: '{{ lookup("password", "" + rke2_servers[0] + ":rke2 length=16 chars=ascii_letters,digits") }}'
{% if rke2_servers[0] not in ansible_default_ipv4.address %}
server: "https://{% if rke2_server is defined %}{{ rke2_server }}{% else %}{{ rke2_servers[0] }}{% endif %}:{% if rke2_haproxy_dept | bool %}{{ rke2_haproxy_server | default('9346') }}{% else %}9345{% endif %}"
{% endif %}

# Database
etcd-expose-metrics: true
etcd-snapshot-schedule-cron: "{{ ( rke2_servers[0] | hash | list | map('int',0,16) | sum ) % 60 }} * * * *"
etcd-snapshot-retention: {{ rke2_backup.keep | default(5) }}
{% if rke2_backup.s3 | bool %}
etcd-s3: true
etcd-s3-endpoint: "{{ rke2_backup.endpoint }}"
etcd-s3-skip-ssl-verify: true
etcd-s3-access-key: "{{ rke2_backup.access_key }}"
etcd-s3-secret-key: "{{ rke2_backup.secret_key }}"
etcd-s3-bucket: "{{ rke2_backup.bucket }}"
etcd-s3-region: "{{ rke2_backup.region | default('us-east-1') }}"
etcd-s3-folder:	"{{ rke2_backup.folder }}"
etcd-s3-insecure: {{ rke2_backup.insecure | default(false) | bool }}
etcd-s3-timeout: {{ rke2_backup.timeout | default("5m0s") }}
{% endif %}

# Flags
kube-apiserver-arg:
  - audit-log-maxage={{ rke2_kube_audit.logmaxage | default("20") }}
  - audit-log-maxbackup={{ rke2_kube_audit.logmaxbackup | default("10") }}
  - audit-log-maxsize={{ rke2_kube_audit.logmaxsize | default("100") }}
  - audit-log-truncate-enabled=true
  - audit-log-truncate-max-batch-size={{ rke2_kube_audit.logtruncatemaxbatchsize | default("32768") }}
  - audit-log-truncate-max-event-size={{ rke2_kube_audit.logtruncatemaxeventsize | default("32768") }}
etcd-arg:
  - quota-backend-bytes=6442450944
kube-controller-manager-arg:
  - bind-address=0.0.0.0
kube-scheduler-arg:
  - bind-address=0.0.0.0

# Components
disable-kube-proxy: {{ rke2_disable_kube_proxy | default(false) | bool }}
disable-cloud-controller: {{ rke2_disable_cloud_controller | default(false) | bool }}
disable:
{% if rke2_disable is defined and rke2_disable | length > 0 %}
{% for item in rke2_disable %}
  - "{{ item }}"
{% endfor %}
{% endif%}

# Security
profile: cis

# Agent/Node
node-label:
  - "environments={{ environments }}"
  - "project={{ project }}"
  - "group={{ group }}"
  - "customer={{ customer }}"
{% if rke2_node_extra_labels is defined and rke2_node_extra_labels | length > 0 %}
{% for item in rke2_node_extra_labels %}
  - "{{ item }}"
{% endfor %}
{% endif %}
node-taint:
  - "CriticalAddonsOnly=true:NoExecute"
protect-kernel-defaults: true
{% if ansible_selinux.status == "disabled" %}
selinux: false
{% else %}
selinux: true
{% endif %}

# Agent/Runtime
system-default-registry: "{{ rke2_system_default_registry }}"

# Agent/Flags
kubelet-arg:
  - "--config=/etc/rancher/rke2/kubeletconfig.yaml"
{% if rke2_cloud_provider_external | bool %}
  - "cloud-provider=external"
{% endif %}
{% if not rke2_disable_kube_proxy %}
kube-proxy-arg:
  - proxy-mode=ipvs
  - ipvs-strict-arp=true
{% endif %}